{"version":3,"file":"static/js/274.976013e4.chunk.js","mappings":"wKACA,EAA2B,2BAA3B,EAA8D,wBAA9D,EAAgG,0BAAhG,EAA4I,kCAA5I,EAAmL,qBAAnL,EAAgN,wB,UCAhN,EAAuB,0BAAvB,EAAgE,kC,SCkBhE,EAVqC,SAACA,GAClC,IAAIC,EAAO,aAAeD,EAAME,GAEhC,OACI,gBAAKC,UAAWC,EAAhB,UACI,SAAC,KAAD,CAASC,GAAIJ,EAAME,UAAW,qBAAGG,SAA0BF,EAAiB,IAA5E,SAAiFJ,EAAMO,UCbnG,EAAyD,2BCYzD,EANoC,SAACP,GACjC,OACI,gBAAKG,UAAWC,EAAhB,SAA2BJ,EAAMQ,W,wCCDnCC,EAAiCC,EAAAA,KAAaC,MAAM,CACvDC,eAAgBF,EAAAA,KACZG,IAAI,EAAG,IACPC,SAAS,MAsChB,EA/BiC,WAE9B,IAAMC,GAAwBC,EAAAA,EAAAA,MAO9B,OACG,SAAC,KAAD,CACGC,cAAe,CACbL,eAAgB,IAElBM,iBAAkBT,EAClBU,SAXW,SAACC,EAAD,GAAiD,IAAtBC,EAAqB,EAArBA,UACzCN,EAASO,EAAAA,EAAAA,WAAmBF,EAAOR,iBACnCS,KAIA,SAOI,cAAEE,OAAF,OACE,UAAC,KAAD,CAAMpB,UAAWC,EAAjB,WACG,SAAC,KAAD,CACIG,KAAM,iBACNiB,KAAM,OACNC,YAAa,8FAEjB,mBAAQD,KAAM,SAAd,iCCxCFE,EAAc,SAACC,GACxB,OAAOA,EAAMC,aAAaC,UAGjBC,EAAa,SAACH,GACvB,OAAOA,EAAMC,aAAaG,S,oBCuC9B,EAhC2B,WAEvB,IAAMF,GAAWG,EAAAA,EAAAA,IAAYN,GACvBK,GAAUC,EAAAA,EAAAA,IAAYF,GACtBG,GAASD,EAAAA,EAAAA,IAAYE,EAAAA,IAEvBC,EAAmBN,EAASO,KAAK,SAACC,EAAGC,GAAJ,OAAsB,SAAC,EAAD,CAAa/B,KAAM8B,EAAE9B,KAAML,GAAImC,EAAEnC,IAASoC,MAEjGC,EAAiBR,EAAQK,KAAM,SAACI,EAAGF,GAAJ,OAAsB,SAAC,EAAD,CAAY9B,QAASgC,EAAEhC,SAAc8B,MAE9F,OAAKL,GAKD,4BACI,eAAI9B,UAAWC,EAAf,uBACA,iBAAKD,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACK+B,KAEL,iBAAKhC,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACKmC,KAEL,SAAC,EAAD,cAdL,SAAC,KAAD,CAAUlC,GAAI","sources":["webpack://social-glot/./src/components/Messages/Messages.module.scss?203d","webpack://social-glot/./src/components/Messages/MessageItem/MessageItem.module.scss?a186","components/Messages/MessageItem/MessageItem.tsx","webpack://social-glot/./src/components/Messages/DialogItem/DialogItem.module.scss?2423","components/Messages/DialogItem/DialogItem.tsx","components/Forms/AddMassageForm.tsx","Redux/messageSelector.ts","components/Messages/Messages.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"messages\":\"Messages_messages__cszNB\",\"names\":\"Messages_names__Wnuxk\",\"dialogs\":\"Messages_dialogs__1S4oE\",\"dialogContainer\":\"Messages_dialogContainer__pUUBh\",\"h2\":\"Messages_h2__6HvoC\",\"input\":\"Messages_input__c8PZq\"};","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"MessageItem_name__CRkUH\",\"activeDialog\":\"MessageItem_activeDialog__Bgm0Z\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './MessageItem.module.scss'\r\n\r\ntype Props = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\nconst MessageItem: React.FC<Props> = (props) => {\r\n    let path = \"/messages/\" + props.id;\r\n\r\n    return (\r\n        <div className={s.name}>\r\n            <NavLink to={path} className={({ isActive }) => isActive ? s.activeDialog : \"\"}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageItem;","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"DialogItem_item__cRW39\",\"dialog\":\"DialogItem_dialog__MhHQt\"};","import React from 'react';\r\nimport s from './DialogItem.module.scss'\r\n\r\ntype Props = {\r\n    message: string\r\n}\r\n\r\nconst DialogItem: React.FC<Props> = (props) => {\r\n    return (\r\n        <div className={s.dialog}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from '../Messages/Messages.module.scss'\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { AppDispatch } from '../../Redux/redux-store';\r\nimport { useDispatch } from 'react-redux';\r\nimport { actions } from '../../Redux/messagesReducer';\r\n\r\nconst validationSchemaAddMassageForm = Yup.object().shape({\r\n   newMessageText: Yup.string()\r\n      .min(1, \"\")\r\n      .required(\"\")\r\n});\r\n\r\ntype AddMessageType = {\r\n   newMessageText: string\r\n}\r\n\r\nconst AddMassageForm: React.FC = () => {\r\n\r\n   const dispatch: AppDispatch = useDispatch()\r\n\r\n   const onSubmit = (values: AddMessageType, { resetForm }: any) => {\r\n      dispatch(actions.addMessage(values.newMessageText))\r\n      resetForm();\r\n   }\r\n\r\n   return (\r\n      <Formik\r\n         initialValues={{\r\n           newMessageText: \"\"\r\n         }}\r\n         validationSchema={validationSchemaAddMassageForm}\r\n         onSubmit={onSubmit}\r\n      >\r\n         {({errors}) => (\r\n            <Form className={s.input}>\r\n               <Field \r\n                   name={'newMessageText'}\r\n                   type={'text'}\r\n                   placeholder={'Текст сообщения...'}\r\n               />\r\n               <button type={'submit'}>Send message</button>\r\n            </Form>\r\n         )}\r\n      </Formik>\r\n   )\r\n}\r\n\r\nexport default AddMassageForm;","import { AppStateType } from \"./redux-store\";\r\n\r\nexport const getMessages = (state: AppStateType) => {\r\n    return state.messagesPage.messages;\r\n}\r\n\r\nexport const getDialogs = (state: AppStateType) => {\r\n    return state.messagesPage.dialogs;\r\n}","import React from 'react';\r\nimport s from './Messages.module.scss'\r\nimport MessageItem from './MessageItem/MessageItem';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport AddMassageForm from '../Forms/AddMassageForm';\r\nimport { useSelector } from 'react-redux';\r\nimport { getDialogs, getMessages } from '../../Redux/messageSelector';\r\nimport { getIsAuth } from '../../Redux/usersSelector';\r\nimport { Navigate } from 'react-router';\r\n\r\ntype Props = {\r\n\r\n}\r\n\r\nconst Messages: React.FC = () => {\r\n\r\n    const messages = useSelector(getMessages)\r\n    const dialogs = useSelector(getDialogs)\r\n    const isAuth = useSelector(getIsAuth)\r\n\r\n    let messageElmements = messages.map( (m, index: number) => <MessageItem name={m.name} id={m.id} key={index} /> )\r\n\r\n    let dialogElements = dialogs.map ( (d, index: number) => <DialogItem message={d.message} key={index} /> )\r\n\r\n    if (!isAuth) {\r\n        return <Navigate to={'/login'} />\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <h2 className={s.h2}>Messages</h2>\r\n            <div className={s.messages}>\r\n                <div className={s.names}>\r\n                    {messageElmements}\r\n                </div>\r\n                <div className={s.dialogs}>\r\n                    <div className={s.dialogContainer}>\r\n                        {dialogElements}\r\n                    </div>\r\n                    <AddMassageForm />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Messages;"],"names":["props","path","id","className","s","to","isActive","name","message","validationSchemaAddMassageForm","Yup","shape","newMessageText","min","required","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","resetForm","actions","errors","type","placeholder","getMessages","state","messagesPage","messages","getDialogs","dialogs","useSelector","isAuth","getIsAuth","messageElmements","map","m","index","dialogElements","d"],"sourceRoot":""}